// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(OrgDbContext))]
    [Migration("20250810184554_CleanArchitectureSample")]
    partial class CleanArchitectureSample
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.DAos.Course", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cid"));

                    b.Property<string>("CName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cid");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Entities.DAos.Department", b =>
                {
                    b.Property<int>("Did")
                        .HasColumnType("int");

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Did");

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Did = 1,
                            DName = "Customer Support",
                            Description = "Handles customer queries and issues",
                            IsActive = false
                        },
                        new
                        {
                            Did = 2,
                            DName = "Legal",
                            Description = "Manages legal affairs and compliance",
                            IsActive = false
                        },
                        new
                        {
                            Did = 3,
                            DName = "Procurement",
                            Description = "Oversees purchasing and vendor management",
                            IsActive = false
                        },
                        new
                        {
                            Did = 4,
                            DName = "Training",
                            Description = "Conducts employee training and development",
                            IsActive = false
                        },
                        new
                        {
                            Did = 5,
                            DName = "Security",
                            Description = "Ensures physical and digital security",
                            IsActive = false
                        },
                        new
                        {
                            Did = 6,
                            DName = "IT",
                            Description = "Information Technology",
                            IsActive = false
                        },
                        new
                        {
                            Did = 7,
                            DName = "HR",
                            Description = "Human Resource",
                            IsActive = false
                        },
                        new
                        {
                            Did = 8,
                            DName = "Admin",
                            Description = "Administration",
                            IsActive = false
                        },
                        new
                        {
                            Did = 9,
                            DName = "Finance",
                            Description = "Finance",
                            IsActive = false
                        },
                        new
                        {
                            Did = 10,
                            DName = "Sales",
                            Description = "Sales",
                            IsActive = false
                        },
                        new
                        {
                            Did = 11,
                            DName = "Marketing",
                            Description = "Marketing",
                            IsActive = false
                        },
                        new
                        {
                            Did = 12,
                            DName = "Production",
                            Description = "Production",
                            IsActive = false
                        },
                        new
                        {
                            Did = 13,
                            DName = "R&D",
                            Description = "Research and Development",
                            IsActive = false
                        },
                        new
                        {
                            Did = 14,
                            DName = "Quality",
                            Description = "Quality",
                            IsActive = false
                        },
                        new
                        {
                            Did = 15,
                            DName = "Logistics",
                            Description = "Logistics",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("Entities.DAos.Employee", b =>
                {
                    b.Property<int>("Eid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eid"), 100L);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("Date");

                    b.Property<int?>("Did")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Male");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Eid");

                    b.HasIndex("Did");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Entities.DAos.Student", b =>
                {
                    b.Property<int>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sid"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sid");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("Entities.DAos.StudentCourse", b =>
                {
                    b.Property<int>("SCid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SCid"));

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOE")
                        .HasColumnType("datetime2");

                    b.Property<double>("Marks")
                        .HasColumnType("float");

                    b.Property<int>("Sid")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SCid");

                    b.HasIndex("Cid");

                    b.HasIndex("Sid");

                    b.ToTable("StudentCourse", (string)null);
                });

            modelBuilder.Entity("Entities.DAos.Employee", b =>
                {
                    b.HasOne("Entities.DAos.Department", "DepartmentNav")
                        .WithMany("Employees")
                        .HasForeignKey("Did");

                    b.Navigation("DepartmentNav");
                });

            modelBuilder.Entity("Entities.DAos.StudentCourse", b =>
                {
                    b.HasOne("Entities.DAos.Course", "CourseNav")
                        .WithMany("StudentCourses")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.DAos.Student", "StudentNav")
                        .WithMany("StudentCourses")
                        .HasForeignKey("Sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseNav");

                    b.Navigation("StudentNav");
                });

            modelBuilder.Entity("Entities.DAos.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("Entities.DAos.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.DAos.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
